#BlueJ class context
comment0.params=rows\ cols
comment0.target=MyBoundedGrid(int,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ MyBoundedGrid\n\ \n\ @param\ rows\ the\ number\ of\ rows\ in\ the\ bounded\ grid\n\ @param\ cols\ the\ number\ of\ columns\ in\ the\ bounded\ grid\n
comment1.params=
comment1.target=int\ getNumRows()
comment1.text=\n\ Getter\ for\ the\ number\ of\ rows\n\ \n\ @return\ the\ number\ of\ rows\n
comment2.params=
comment2.target=int\ getNumCols()
comment2.text=\n\ Getter\ for\ the\ number\ of\ columns\n\ \n\ @return\ the\ number\ of\ columns\n
comment3.params=loc
comment3.target=boolean\ isValid(Location)
comment3.text=\n\ Tells\ if\ a\ given\ location\ is\ valid\ within\ the\ boundaries\ of\ the\ grid\n\ \n\ @param\ loc\ the\ given\ lcoation\n\ @return\ true\ if\ the\ location\ is\ valid,\ false\ otherwise\n
comment4.params=loc\ obj
comment4.target=java.lang.Object\ put(Location,\ java.lang.Object)
comment4.text=\n\ Puts\ a\ given\ object\ in\ the\ given\ location\ (if\ the\ location\ is\ valid)\ in\ the\ grid\n\ \n\ @param\ loc\ the\ given\ location\ to\ put\ the\ object\n\ @param\ obj\ the\ object\ to\ put\n\ @postcondition\ the\ given\ location\ in\ the\ grid\ now\ holds\ the\ given\ object\n\ @return\ the\ object\ that\ was\ originally\ in\ the\ given\ location;\ null\ if\ nothing\ was\ there\ \n\ \ \ \ \ \ or\ location\ was\ invalid\n
comment5.params=loc
comment5.target=java.lang.Object\ remove(Location)
comment5.text=\n\ Removes\ the\ object\ at\ a\ given\ location\ in\ the\ grid\n\ \n\ @param\ loc\ the\ given\ location\n\ @postcondition\ the\ given\ location\ in\ the\ grid\ now\ holds\ a\ null\n\ @return\ the\ object\ that\ was\ at\ that\ location;\ null\ if\ nothing\ was\ there\ \n\ \ \ \ \ \ or\ the\ location\ was\ invalid\n
comment6.params=loc
comment6.target=java.lang.Object\ get(Location)
comment6.text=\n\ Gets\ the\ object\ at\ a\ given\ location\ in\ the\ grid\ (if\ it's\ valid)\n\ \n\ @param\ loc\ the\ given\ location\ from\ which\ to\ get\ the\ object\n\ @return\ the\ object\ in\ that\ location;\ \n\ \ \ \ \ \ null\ if\ the\ location\ is\ invalid\ or\ there\ is\ nothing\ there\n
comment7.params=
comment7.target=java.util.ArrayList\ getOccupiedLocations()
comment7.text=\n\ Gets\ a\ list\ of\ all\ the\ locations\ in\ the\ grid\ that\ have\ objects\n\ \n\ @return\ a\ list\ of\ the\ locations\ in\ the\ grid\ that\ contain\ nulls\n
numComments=8
