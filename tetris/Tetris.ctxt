#BlueJ class context
comment0.params=
comment0.target=Tetris()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Tetris\n\ Instantiates\ all\ instance\ variables\n\ calls\ the\ method\ play\ to\ begin\ the\ game\n
comment1.params=
comment1.target=void\ upPressed()
comment1.text=\n\ Response\ of\ this\ ArrowListener\ to\ when\ the\ up\ arrow\ is\ pressed\n\ Rotates\ the\ active\ Tetrad\ \n\ \n\ @postcondition\ the\ current\ Tetrad\ has\ been\ rotated\ and\ the\ display\ updated\n
comment10.params=e
comment10.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment10.text=\n\ Does\ nothing\n\ \n\ @param\ e\ when\ the\ mouse\ is\ released\ from\ the\ button\n
comment11.params=row
comment11.target=boolean\ isCompletedRow(int)
comment11.text=\n\ Checks\ if\ the\ given\ row\ has\ blocks\ in\ every\ cell\n\ \n\ @param\ row\ the\ row\ to\ check\n\ @precondition\ 0\ <\=\ row\ <\ number\ of\ rows\n\ @return\ true\ if\ every\ cell\ in\ the\ given\ row\ is\ occupied;\ \n\ \ \ \ \ \ false\ otherwise\n
comment12.params=row
comment12.target=void\ clearRow(int)
comment12.text=\n\ Clears\ the\ given\ row\ by\ moving\ all\ rows\ above\ it\ down\ one\ row,\ \n\ and\ setting\ the\ top\ row\ all\ to\ null\n\ \n\ @param\ row\ the\ row\ to\ clear\n\ @precondition\ 0\ <\=\ row\ <\ number\ of\ rows;\ given\ row\ is\ full\ of\ blocks\n\ @postcondition\ every\ block\ in\ the\ given\ row\ has\ been\ removed,\ and\ every\ block\ above\ row\n\ \ \ \ \ \ \ \ \ \ has\ been\ moved\ down\ one\ row\n
comment13.params=
comment13.target=void\ clearCompletedRows()
comment13.text=\n\ Traverses\ the\ entire\ grid\ and\ clears\ all\ the\ occupied\ rows\n\ The\ score\ is\ updated\ depending\ on\ how\ many\ rows\ were\ cleared\ at\ once\n\ The\ level\ is\ updated\ depending\ on\ the\ total\ number\ of\ rows\ cleared\n\ The\ speed\ is\ updated\ depending\ on\ the\ level\n\ \n\ @postcondition\ all\ complete\ rows\ have\ been\ cleared\ and\ the\ display\ updated\n
comment14.params=
comment14.target=void\ play()
comment14.text=\n\ Allows\ the\ game\ to\ proceed\ by\ translating\ the\ active\ Tetrad\ down\ 1\ block\ per\ unit\n\ of\ time.\ The\ higher\ the\ level,\ the\ faster\ the\ drop\n\ Once\ the\ active\ Tetrad\ has\ fallen\ as\ far\ as\ it\ can\ go,\ this\ method\ checks\ to\ see\ if\ \n\ any\ rows\ can\ be\ cleared\ (and\ clears\ them).\ Then\ a\ new\ Tetrad\ is\ spawned\ and\ becomes\n\ the\ current\ one\n\ This\ method\ continues\ until\ the\ active\ Tetrad\ can't\ move\ when\ it\ is\ spawned;\ ie.\ \n\ game\ over.\ When\ the\ game\ is\ over,\ the\ display\ updates\ accordingly.\n
comment15.params=
comment15.target=void\ updateText()
comment15.text=\n\ Updates\ the\ level\ and\ score\ JLabel\ in\ the\ display\n
comment2.params=
comment2.target=void\ downPressed()
comment2.text=\n\ Response\ of\ this\ ArrowListener\ to\ when\ the\ down\ arrow\ is\ pressed\n\ Translates\ the\ active\ Tetrad\ down\ 1\ block\ (soft\ drop)\n\ \n\ @postcondition\ the\ current\ Tetrad\ has\ been\ translated\ down\ and\ the\ display\ updated\n
comment3.params=
comment3.target=void\ leftPressed()
comment3.text=\n\ Response\ of\ this\ ArrowListener\ to\ when\ the\ left\ arrow\ is\ pressed\n\ Translates\ the\ active\ Tetrad\ left\ 1\ block\n\ \n\ @postcondition\ the\ current\ Tetrad\ has\ been\ translated\ left\ and\ the\ display\ updated\n
comment4.params=
comment4.target=void\ rightPressed()
comment4.text=\n\ Response\ of\ this\ ArrowListener\ to\ when\ the\ right\ arrow\ is\ pressed\n\ Translates\ the\ active\ Tetrad\ right\ 1\ block\n\ \n\ @postcondition\ the\ current\ Tetrad\ has\ been\ translated\ right\ and\ the\ display\ updated\n
comment5.params=
comment5.target=void\ spacePressed()
comment5.text=\n\ Response\ of\ this\ ArrowListener\ to\ when\ the\ spacebar\ is\ pressed\n\ Hard\ drops\ the\ current\ Tetrad\ all\ the\ way\ down\ (hard\ drop)\n\ \n\ @postcondition\ the\ current\ Tetrad\ has\ been\ dropped\ as\ far\ down\ as\ it\ can\ go\ \n\ \ \ \ \ \ and\ the\ display\ updated\n
comment6.params=e
comment6.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.text=\n\ Response\ of\ this\ MouseListener\ to\ when\ the\ corresponding\ button\ (see\ MyBoundedGrid)\n\ has\ been\ clicked\n\ Starts\ a\ new\ game\n\ \n\ @param\ e\ the\ mouseclick\ from\ the\ button\n\ @postcondition\ a\ new\ display\ has\ been\ created,\ the\ entire\ game\ reset\n
comment7.params=e
comment7.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment7.text=\n\ Does\ nothing\n\ \n\ @param\ e\ when\ the\ mouse\ enters\ the\ button\ \n
comment8.params=e
comment8.target=void\ mouseExited(java.awt.event.MouseEvent)
comment8.text=\n\ Does\ nothing\n\ \n\ @param\ e\ when\ the\ mouse\ exits\ the\ button\n
comment9.params=e
comment9.target=void\ mousePressed(java.awt.event.MouseEvent)
comment9.text=\n\ Does\ nothing\n\ \n\ @param\ e\ when\ the\ mouse\ is\ pressed\ on\ the\ button\n
numComments=16
